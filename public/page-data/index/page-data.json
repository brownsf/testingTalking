{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/","matchPath":"/*","webpackCompilationHash":"2513faed0fdfac3c7d9c","result":{"data":{"deck":{"id":"c076b6f1-db43-5477-87ac-c1607d38cb84","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar themes = [theme, future];\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  themes: themes,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"Totally Testing React\")), mdx(\"h3\", null, \"Totally Testing React\"), mdx(\"p\", null, \"Scott Brown\", mdx(\"br\", null), \"Sr Consultant\", mdx(\"br\", null), \"Daugherty Business Solutions\"), mdx(\"hr\", null), mdx(Image, {\n    src: sponser,\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"h3\", null, \"Background\"), mdx(\"ul\", null, mdx(\"li\", null, \"Digital Marketing\"), mdx(\"li\", null, \"Startups\"), mdx(\"li\", null, \"Enterprise\")), mdx(\"hr\", null), mdx(\"h4\", null, \"Influence\"), mdx(\"h5\", null, \"Kent C Dodds\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://kentcdodds.com/\"\n  }), \"https://kentcdodds.com/\")), mdx(\"hr\", null), mdx(\"h4\", null, \"What We're Going to Cover\"), mdx(\"ul\", null, mdx(\"li\", null, \"Types of testing\"), mdx(\"li\", null, \"Why to test\"), mdx(\"li\", null, \"What to test\"), mdx(\"li\", null, \"React Testing Toolbox\"), mdx(\"li\", null, \"Examples\")), mdx(\"hr\", null), mdx(\"h4\", null, \"Types of Testing\"), mdx(\"ul\", null, mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Static\"), mdx(\"li\", null, \"Unit\"), mdx(\"li\", null, \"Integration\"), mdx(\"li\", null, \"End to End\"))), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"Unit testing is a software testing where individual units (components) of a software are tested. The purpose of unit testing is to validate that each unit of the software performs as designed. A unit is the smallest testable part of any software. Integration tests are used to test multiple, bigger units (components) in interaction, and can sometimes even span multiple systems. The purpose of integration tests is to find bugs in the connections and dependencies between various components, such as: Passing invalid or incorrectly ordered arguments. e2e Testing how scenarios function on the product itself, by controlling the browser or the website. These tests usually ignore the internal structure of the application entirety and looks at them from the outside like on a black box.\"), mdx(\"hr\", null), mdx(Image, {\n    src: \"https://i.giphy.com/l0MYSpvx4pnsoMNz2.gif\",\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"h4\", null, \"Why to test\"), mdx(\"ul\", null, mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Improve code quality and stability\"), mdx(\"li\", null, \"Simplify code refactoring\"), mdx(\"li\", null, \"Improve documentation\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Why not to test\"), mdx(\"ul\", null, mdx(\"li\", null, \"Hit an abitrary coverage percentage\"), mdx(\"li\", null, \"Lock down implementaion\")), mdx(\"hr\", null), mdx(\"h3\", null, \"What to test\"), mdx(\"ul\", null, mdx(\"li\", null, \"User interactions\"), mdx(\"li\", null, \"Changing props\"), mdx(\"li\", null, \"Context changes\"), mdx(\"li\", null, \"Subscription changes\")), mdx(\"hr\", null), mdx(\"h3\", null, \"React Testing Toolbox\", mdx(\"br\", null), \"Static Testing\"), mdx(\"ul\", null, mdx(\"li\", null, \"Linters\", mdx(\"ul\", null, mdx(\"li\", null, \"Eslint\"))), mdx(\"li\", null, \"Type Checkers\", mdx(\"ul\", null, mdx(\"li\", null, \"Typescript\"), mdx(\"li\", null, \"Flow\"), mdx(\"li\", null, \"ReasonML\")))), mdx(\"hr\", null), mdx(\"h3\", null, \"React Testing Toolbox\", mdx(\"br\", null), \"Unit Testing\"), mdx(\"ul\", null, mdx(\"li\", null, \"Test Runners - Mocha\"), mdx(\"li\", null, \"Assertion Libraries - Chai\"), mdx(\"li\", null, \"Mocking Libraries - Sinon\")), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"p\", null, \"Our just use Jest\")), mdx(\"hr\", null), mdx(\"h3\", null, \"React Testing Toolbox\", mdx(\"br\", null), \"Integration Testing\"), mdx(\"ul\", null, mdx(\"li\", null, \"Enzyme\"), mdx(\"li\", null, \"React Testing Library\")), mdx(\"hr\", null), mdx(\"h3\", null, \"React Testing Toolbox\", mdx(\"br\", null), \"End to End Testing\"), mdx(\"ul\", null, mdx(\"li\", null, \"Selenium\"), mdx(\"li\", null, \"Nightwatch.js \"), mdx(\"li\", null, \"Cypress\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/*","isCreatedByStatefulCreatePages":false,"id":"c076b6f1-db43-5477-87ac-c1607d38cb84","slug":"","title":"Totally Testing React"}}}